//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace FormsFrontend.bank {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ClientBankServiceSoap", Namespace="http://tempuri.org/")]
    public partial class ClientBankService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback PayThatBillOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTransactionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangeTransactionDescriptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveBalanceOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ClientBankService() {
            this.Url = global::FormsFrontend.Properties.Settings.Default.FormsFrontend_localhost_ClientBankService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event PayThatBillCompletedEventHandler PayThatBillCompleted;
        
        /// <remarks/>
        public event ValidLoginCompletedEventHandler ValidLoginCompleted;
        
        /// <remarks/>
        public event GetTransactionsCompletedEventHandler GetTransactionsCompleted;
        
        /// <remarks/>
        public event ChangeTransactionDescriptionCompletedEventHandler ChangeTransactionDescriptionCompleted;
        
        /// <remarks/>
        public event RetrieveBalanceCompletedEventHandler RetrieveBalanceCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PayThatBill", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool PayThatBill(float amount, string description, string payingUserName, string payingPassword, string payeeUserName) {
            object[] results = this.Invoke("PayThatBill", new object[] {
                        amount,
                        description,
                        payingUserName,
                        payingPassword,
                        payeeUserName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void PayThatBillAsync(float amount, string description, string payingUserName, string payingPassword, string payeeUserName) {
            this.PayThatBillAsync(amount, description, payingUserName, payingPassword, payeeUserName, null);
        }
        
        /// <remarks/>
        public void PayThatBillAsync(float amount, string description, string payingUserName, string payingPassword, string payeeUserName, object userState) {
            if ((this.PayThatBillOperationCompleted == null)) {
                this.PayThatBillOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPayThatBillOperationCompleted);
            }
            this.InvokeAsync("PayThatBill", new object[] {
                        amount,
                        description,
                        payingUserName,
                        payingPassword,
                        payeeUserName}, this.PayThatBillOperationCompleted, userState);
        }
        
        private void OnPayThatBillOperationCompleted(object arg) {
            if ((this.PayThatBillCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PayThatBillCompleted(this, new PayThatBillCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ValidLogin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ValidLogin(string username, string password) {
            object[] results = this.Invoke("ValidLogin", new object[] {
                        username,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ValidLoginAsync(string username, string password) {
            this.ValidLoginAsync(username, password, null);
        }
        
        /// <remarks/>
        public void ValidLoginAsync(string username, string password, object userState) {
            if ((this.ValidLoginOperationCompleted == null)) {
                this.ValidLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidLoginOperationCompleted);
            }
            this.InvokeAsync("ValidLogin", new object[] {
                        username,
                        password}, this.ValidLoginOperationCompleted, userState);
        }
        
        private void OnValidLoginOperationCompleted(object arg) {
            if ((this.ValidLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidLoginCompleted(this, new ValidLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTransactions", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetTransactions(string accountUserName, string accountPassword) {
            object[] results = this.Invoke("GetTransactions", new object[] {
                        accountUserName,
                        accountPassword});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetTransactionsAsync(string accountUserName, string accountPassword) {
            this.GetTransactionsAsync(accountUserName, accountPassword, null);
        }
        
        /// <remarks/>
        public void GetTransactionsAsync(string accountUserName, string accountPassword, object userState) {
            if ((this.GetTransactionsOperationCompleted == null)) {
                this.GetTransactionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTransactionsOperationCompleted);
            }
            this.InvokeAsync("GetTransactions", new object[] {
                        accountUserName,
                        accountPassword}, this.GetTransactionsOperationCompleted, userState);
        }
        
        private void OnGetTransactionsOperationCompleted(object arg) {
            if ((this.GetTransactionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTransactionsCompleted(this, new GetTransactionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ChangeTransactionDescription", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ChangeTransactionDescription(string accountUserName, string accountPassword, int transactionId, string newDescription) {
            this.Invoke("ChangeTransactionDescription", new object[] {
                        accountUserName,
                        accountPassword,
                        transactionId,
                        newDescription});
        }
        
        /// <remarks/>
        public void ChangeTransactionDescriptionAsync(string accountUserName, string accountPassword, int transactionId, string newDescription) {
            this.ChangeTransactionDescriptionAsync(accountUserName, accountPassword, transactionId, newDescription, null);
        }
        
        /// <remarks/>
        public void ChangeTransactionDescriptionAsync(string accountUserName, string accountPassword, int transactionId, string newDescription, object userState) {
            if ((this.ChangeTransactionDescriptionOperationCompleted == null)) {
                this.ChangeTransactionDescriptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangeTransactionDescriptionOperationCompleted);
            }
            this.InvokeAsync("ChangeTransactionDescription", new object[] {
                        accountUserName,
                        accountPassword,
                        transactionId,
                        newDescription}, this.ChangeTransactionDescriptionOperationCompleted, userState);
        }
        
        private void OnChangeTransactionDescriptionOperationCompleted(object arg) {
            if ((this.ChangeTransactionDescriptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangeTransactionDescriptionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrieveBalance", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> RetrieveBalance(string accountUserName, string accountPassword) {
            object[] results = this.Invoke("RetrieveBalance", new object[] {
                        accountUserName,
                        accountPassword});
            return ((System.Nullable<double>)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveBalanceAsync(string accountUserName, string accountPassword) {
            this.RetrieveBalanceAsync(accountUserName, accountPassword, null);
        }
        
        /// <remarks/>
        public void RetrieveBalanceAsync(string accountUserName, string accountPassword, object userState) {
            if ((this.RetrieveBalanceOperationCompleted == null)) {
                this.RetrieveBalanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveBalanceOperationCompleted);
            }
            this.InvokeAsync("RetrieveBalance", new object[] {
                        accountUserName,
                        accountPassword}, this.RetrieveBalanceOperationCompleted, userState);
        }
        
        private void OnRetrieveBalanceOperationCompleted(object arg) {
            if ((this.RetrieveBalanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveBalanceCompleted(this, new RetrieveBalanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void PayThatBillCompletedEventHandler(object sender, PayThatBillCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PayThatBillCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PayThatBillCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void ValidLoginCompletedEventHandler(object sender, ValidLoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetTransactionsCompletedEventHandler(object sender, GetTransactionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTransactionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTransactionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void ChangeTransactionDescriptionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void RetrieveBalanceCompletedEventHandler(object sender, RetrieveBalanceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveBalanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveBalanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Nullable<double> Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Nullable<double>)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591